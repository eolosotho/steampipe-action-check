name: "Steampipe GitHub Action"
author: "Turbot.com"
description: "Run Steampipe against Terraform infrastructure code, as a pre-packaged GitHub Action"

branding:
  color: "red"
  icon: "shield"

inputs:
  mod_url:
    description: "Git URL of specific terraform compliance mod that will be installed. This will be passed on to `git clone`"
    required: false
  steampipe_version:
    description: "The version number of Steampipe that will be installed"
    required: false
    default: ""
  run:
    description: "A list of benchmarks and controls to run (comma-separated). If no value is specified, it runs `check all`"
    required: false
    default: "all"
  paths:
    description: "Directory with infrastructure code to scan explicitly, if not specified, it considers root of the repository as default"
    required: false
    default: "."
  github-token:
    description: "The token is used for fetching patch of a pull request to show only new issues"
    required: false
    default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    - id: setup-steampipe
      shell: bash
      run: curl -fsSL https://raw.githubusercontent.com/turbot/steampipe/main/install.sh | bash -E
    - id: setup-node
      uses: actions/setup-node@v3
    - id: install-terraform
      shell: bash
      run: |
        steampipe plugin install "$PLUGIN_NAME"

        connection_data="
          connection \"terraform\" {
            plugin = \"terraform\"
            paths = [ \"$INPUT_PATHS/**/*.tf\" ]
          }
          "

        # Add config file
        printf '%s\n' "$connection_data" > "/home/steampipe/.steampipe/config/terraform.spc"
        printf '%s\n' "Wrote connection file:"
        cat /home/steampipe/.steampipe/config/terraform.spc
        printf '%s\n' "<<<<<<<<<<<<<<<<<<<<<<"
    - id: run-check
      shell: bash
      run: |
        steampipe check ${{inputs.run}} --output=none --export=json --mod-location=/workspace