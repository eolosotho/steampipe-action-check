name: "Steampipe GitHub Action"
author: "Turbot.com"
description: "Run Steampipe against Terraform infrastructure code, as a pre-packaged GitHub Action"

branding:
  color: "red"
  icon: "shield"

inputs:
  steampipe_version:
    description: "Steampipe version"
  # steampipe_query:
  #   description: "The query"
  #   required: true
  connection_string:
    description: "The connection string"
  connection_file_path:
    description: "The connection file path"
  github_token:
    description: "The token is used for fetching patch of a pull request to show only new issues"
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - name: Validate inputs
      shell: bash
      env:
        INPUT_OPTION_A: ${{ inputs.connection_string }}
        INPUT_OPTION_B: ${{ inputs.connection_file_path }}
      run: |
        if [ -z "$INPUT_OPTION_A" ] && [ -z "$INPUT_OPTION_B" ]; then
          echo "Error: You must provide either option_a or option_b."
          exit 1
        elif [ -n "$INPUT_OPTION_A" ] && [ -n "$INPUT_OPTION_B" ]; then
          echo "Error: You cannot provide both option_a and option_b."
          exit 1
        else
          echo "Valid inputs"
        fi

    - name: Install Steampipe
      shell: bash
      run: |
        VER=${{ inputs.steampipe_version }}
        if [ "$VER" = "latest" ];then
          VER=""
        fi
        # Install Steampipe
        curl https://raw.githubusercontent.com/turbot/steampipe/main/install.sh | sudo bash -s $VER
        steampipe --version
        steampipe query "select 1"
    
    - name: Parse connection_string
      shell: bash
      if: ${{ inputs.connection_string }}
      run: printf '%s\n' "${{ inputs.connection_string }}" > $HOME/.steampipe/config/action.spc

    # - name: Parse connection_file_path
    #   shell: bash
    #   if: ${{ inputs.connection_file_path }}
    #   run: cp ${{ inputs.connection_file_path }}/* $HOME/config

    - name: Install plugins
      shell: sh
      run: |
        set +e
        output=$(steampipe plugin list 2>&1 1>/dev/null | grep -o 'steampipe plugin install [^$]*' | sed -E "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g")
        plugins=$(echo $output | sed -E "s/steampipe plugin install //")

        eval $output
        EVAL_EXIT_CODE=$?

        echo "$plugins" | tr ' ' '\n' | while read word; do
            rm -f $HOME/.steampipe/config/*"$word"*
        done

        if [ "$EVAL_EXIT_CODE" -eq 13 ] || [ "$EVAL_EXIT_CODE" -eq 255 ];then
          exit $EVAL_EXIT_CODE
        fi
        echo "Plugins installed successfully"
        select issuer, not_after as exp_date from net_certificate where domain = 'steampipe.io';