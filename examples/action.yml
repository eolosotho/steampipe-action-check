name: "Steampipe GitHub Action"
author: "Turbot.com"
description: "Run Steampipe against Terraform infrastructure code, as a pre-packaged GitHub Action"

branding:
  color: "red"
  icon: "shield"

inputs:
  steampipe_version:
    description: "Steampipe version"
  # steampipe_query:
  #   description: "The query"
  #   required: true
  connection_string:
    description: "The connection string"
  connection_file_path:
    description: "The connection file path"
  github_token:
    description: "The token is used for fetching patch of a pull request to show only new issues"
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - name: Validate inputs
      shell: bash
      env:
        INPUT_OPTION_A: ${{ inputs.connection_string }}
        INPUT_OPTION_B: ${{ inputs.connection_file_path }}
      run: |
        if [ -z "$INPUT_OPTION_A" ] && [ -z "$INPUT_OPTION_B" ]; then
          echo "Error: You must provide either option_a or option_b."
          exit 1
        elif [ -n "$INPUT_OPTION_A" ] && [ -n "$INPUT_OPTION_B" ]; then
          echo "Error: You cannot provide both option_a and option_b."
          exit 1
        else
          echo "Valid inputs"
        fi


    - name: Create temporary directories
      shell: bash
      id: make-temp-dir
      run: |
        # Create temporary directories for installation
        tmp=$(mktemp -d)
        tmp_install_dir=$tmp/sp_install_dir
        mkdir -p $tmp_install_dir
        echo "tmp-install-dir=$tmp_install_dir" >> $GITHUB_OUTPUT

    # - name: Install Steampipe
    #   shell: bash
    #   run: |
    #     VER=${{ inputs.steampipe_version }}
    #     if [ "$VER" = "latest" ];then
    #       VER=""
    #     fi
    #     # Install Steampipe
    #     curl https://raw.githubusercontent.com/turbot/steampipe/main/install.sh | sudo bash -s $VER
    #     steampipe --version
    #     steampipe query "select 1" --install-dir ${{ steps.make-temp-dir.outputs.tmp-install-dir }}
    
    # - name: Parse connection_string
    #   if: ${{ inputs.connection_string }}
    #   run: printf '%s\n' ${{ inputs.connection_string }} > ${{ steps.make-temp-dir.outputs.tmp-install-dir }}/config/action.spc

    # - name: Parse connection_file_path
    #   if: ${{ inputs.connection_file_path }}
    #   run: cp ${{ inputs.connection_file_path }}/* ${{ steps.make-temp-dir.outputs.tmp-install-dir }}/config

    # - name: Install plugins
    #   run: |
    #     # Check for required plugins
    #     output=$(steampipe plugin list 2>&1 1>/dev/null | grep -o 'steampipe plugin install [^$]*' | sed 's/[^[:alnum:][:space:]]//g')
    #     eval $output
    #     echo "Plugins installed successfully"
    #     steampipe query "select * from terraform_local"